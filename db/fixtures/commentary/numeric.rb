$i_commentary1 =
  '-メソッドは符号を反転させたものを返します。
今回は2回反転されている為、「10」と表示されます。'

$i_commentary2 =
  '**メソッドを呼ぶことで整数のべき乗を求めることが出来ます。
今回は引数に3を渡していますので「1000」と表示されます。'

$i_commentary3 =
  '+メソッドは和を計算します。
よって「20」と表示されます'

$i_commentary4 =
  '|メソッドは数値同士のビット演算において論理和を計算します。
よって「11」と表示されます。'

$i_commentary5 = 
  '浮動小数点数の計算はFloatクラスになります。
+メソッドは和を計算します。
よって「15.0」と表示されます。'

$i_commentary6 = 
  '浮動小数点数の計算はFloatクラスになります。
ここではさらにto_sメソッドによってオブジェクトの文字列表現を返します("15.0"になります。)
さらにto_iメソッドで数値に変換される為、「15」と表示されます。'

$i_commentary7 = 
  'nextメソッドは次の整数を返すメソッドです。
よって「11」と表示されます。'

$i_commentary8 = 
  'Integerクラスにnext!メソッドは実装されていない為、例外が発生します。'
  
$i_commentary9 = 
  'predメソッドはオブジェクトから-1した値を返します。
よってここでは「9」と表示されます。'

$i_commentary10 =
  'succメソッドはオブジェクトの次の整数を返すメソッドです。
よってここでは「11」と表示されます。'

$i_commentary11 =
  'succメソッドとnextメソッドはオブジェクトの次の整数を返すメソッドです。
よってここでは「12」と表示されます。'

$i_commentary12 =
  'timesメソッドはブロックを受け取って数値の回数だけブロック内の処理を繰り返します。
ここでは1行目でobjオブジェクトに10が代入されていてその後timesメソッドによってブロック内の処理が繰り返されています。
変数iには0から5が順番に+メソッドによって加算されるので「20」と表示されます。'

$i_commentary13 = 
  'Integerクラスにおける<<メソッドは引数に渡っている数値だけビットを左にシフトします。
ここではobj1に対して何も破壊的な変更はされていない為、「10」と表示されます。
またtimesメソッドはブロックを受け取って数値の回数だけブロック内の処理を繰り返すメソッドです。'

$i_commentary14 =
  'downtoメソッドはその範囲の中で引数に渡っている数値まで1づつ減らしながらブロック内の処理を実行します。
ここでは5から2までの間1づつ減らしながらobjオブジェクトに+メソッドで数値が加算されていきます。
変数iには5から2までが順番に代入されている為、「24」と表示されます。
'

$i_commentary15 =
  'downtoメソッドはその範囲の中で引数に渡っている数値まで1づつ減らしながらブロック内の処理を実行します。
ここでは文字列"*"を*メソッドで新しい文字列を生成しています(*メソッドは文字列の内容を繰り返して新しい文字列を返すメソッドです)。
その処理結果を一回づつ出力していますので
「
"*****"
"****"
"***"
"**"
"*"
」
と表示されます。
'

$i_commentary16 =
  'uptoメソッドはその範囲の中で引数に渡っている数値まで1づつ増やしながらブロック内の処理を実行します。
  ここでは文字列"*"を*メソッドで新しい文字列を生成しています(*メソッドは文字列の内容を繰り返して新しい文字列を返すメソッドです)。
  その処理結果を一回づつ出力していますので
  「
  "*"
  "**"
  "***"
  "****"
  "*****"
  」
  と表示されます。
  '
  
$i_commentary17 =
  'uptoメソッドはその範囲の中で引数に渡っている数値まで1づつ減らしながらブロック内の処理を実行します。
  ここでは1から5までの間1づつ増やすながらobjオブジェクトに+メソッドで数値が加算されていきます。
  変数iには1から5までが順番に代入されている為、「25」と表示されます。
  '
  
$i_commentary18 =
  'ここでは数値に対して文字列を引数に取って*メソッドを呼んでいる為、例外が発生します。'
  
$i_commentary19 =
  'moduloメソッドは割った結果の余りを返します。
ここでは引数に3.0とFloatクラスを指定していますので実行結果も「1.0」と表示されます。'
  
$i_commentary20 =
  'absメソッドは数値の絶対値を返します。
よってここでは「9」と表示されます。'

$i_commentary21 =
  'absメソッドは数値の絶対値を返します。
  よってここでは「900」と表示されます。'
  
$i_commentary22 =
  '*メソッドは積を計算します。
整数*整数なのでここでは「Integer」と表示されます。'

$i_commentary23 =
  'ceilメソッドは自身と等しいかより大きな整数のうち最小のものを返します。
  よってここでは「2」と表示されます。'
  
$i_commentary24 = 
  'floorメソッドは自身と等しいかより小さな整数のうち最大のものを返します。
よってここでは「1」と表示されます。'

$i_commentary25 =
  'roundメソッドは自身と最も近い整数を返します。
よってここでは「2」と表示されます。'

$i_commentary26 =
  'truncateメソッドは0から自身までの整数で、自身にもっとも近い整数を返します。
よってここでは「1」と表示されます。'

$i_commentary27 =
  'ceilメソッドは自身と等しいかより大きな整数のうち最小のものを返します。
よってここでは「-1」と表示されます。'

$i_commentary28 =
  'floorメソッドは自身と等しいかより小さな整数のうち最大のものを返します。
  よってここでは「-2」と表示されます。'
  
$i_commentary29 =
'roundメソッドは自身と最も近い整数を返します。
よってここでは「-2」と表示されます。'

$i_commentary30 =
  'truncateメソッドは0から自身までの整数で、自身にもっとも近い整数を返します。
  よってここでは「-1」と表示されます。'
  
$i_commentary31 =
  '浮動小数点数の計算はFloatクラスになります。
また*メソッドは積を計算します。
obj1には1.1が代入されていますのでここでは「Float」と表示されます。'
  
$i_commentary32 =
  'to_fメソッドはオブジェクトを浮動小数点数に変換します。
ここではFloatクラスに変換されています。
結果は「100.0」と表示されます。'

$i_commentary33 =
  'Ratinalは有理数を扱うNumericクラスのサブクラスです。
ここでは1が分子、2が分母になります。
表示結果としては「(1/2)」と表示されます。'

$i_commentary34 =
  'Ratinalは有理数を扱うNumericクラスのサブクラスです。
ここでは1が分子、2が分母になります。
表示結果としては「(-1/2)」と表示されるところですが、さらに絶対値を求めるabsメソッドが呼ばれている為、「(1/2)」と表示されます。'

$i_commentary35 =
  'Ratinalは有理数を扱うNumericクラスのサブクラスです。
  ここでは5が分子、1が分母になります。
  よって「(5/1)」と表示されます。'
  
$i_commentary36 =
  'denominatorメソッドは有理数の分母を求めるメソッドです。
ここでは「1」と表示されます。
分子を求めるnumeratorメソッドもあります。'

$i_commentary37 =
  'floorメソッドは自身と等しいかより小さな整数のうち最大のものを返します。
ここでは「1」と表示されます。'

$i_commentary38 =
  'ceilメソッドは自身と等しいかより大きな整数のうち最小のものを返します。
よってここでは「2」と表示されます。'

$i_commentary39 =
  'positive?メソッドは自身が0より大きい場合にtrueを返します。そうでない場合にfalseを返します。
ここではobjに-1が代入されている為、「false」と表示されます。'

$i_commentary40 =
  'positive?メソッドは自身が0より大きい場合にtrueを返します。そうでない場合にfalseを返します。
ここではobjに21が代入されている為、「true」と表示されます。'
  
$i_commentary41 =
  '<=>メソッドは左辺と右辺を比較するメソッドです。左辺の方が大きければ1、等しければ0、右辺の方が大きければ-1、比較出来なければnilと表示されます。
文字列と数値は比較出来ない為、「nil」と表示されます。'

$i_commentary42 =
  '<=>メソッドは左辺と右辺を比較するメソッドです。左辺の方が大きければ1、等しければ0、右辺の方が大きければ-1、比較出来なければnilと表示されます。
比較した結果はあくまでも数値である為、Integer」と表示されます。'
  
$i_commentary43 =
  '<=>メソッドは左辺と右辺を比較するメソッドです。左辺の方が大きければ1、等しければ0、右辺の方が大きければ-1、比較出来なければnilと表示されます。
今回は左辺の方が大きい為、「1」と表示されます。
'

$i_commentary44 =
  'equal?メソッドは二つのオブジェクトが同一か調べる際に使用されます。
今回の変数obj1と引数で渡されているobj2オブジェクトは同一ではない為、「false」と表示されます。
またequal?メソッドはobject_idが一致するかどうか調べています。'

$i_commentary45 =
  'eql?メソッドは内容が等しければ真を返します。
今回の変数obj1と引数で渡されているobj2オブジェクトの内容は等しくない為、「false」と表示されます。'

$i_commentary46 =
  '==メソッドは右辺と左辺が数値として等しい場合は真を返します。
1と1.0は数値として等しいので「true」と表示されます。'

$i_commentary47 =
  '絶対値が有限値の場合に true を、そうでない場合に false を返します。
今回は有限値なので「true」と表示されます'

$i_commentary48 =
  'infinite?メソッドは常にnilを返します。
オブジェクトが Float かComplexの場合で負の無限大の場合は-1を正の無限大の場合に1を返します。
有限値の場合にnilを返す為、今回は「nil」と表示されます。'

$i_commentary49 =
  'negative?メソッドは自身が0未満の場合にtrueを返します。そうでない場合はfalseを返します。
ob1-obj2の実行結果は4となるので今回は「false」と表示されます。'

$i_commentary50 =
  'negative!メソッドは存在しない為、例外が発生します。'
  
$i_commentary51 = 
  'numeratorメソッドは有理数の分子を求めるメソッドです。
ここでは「1」と表示されます。
分母を求めるdenominatorメソッドもあります。'
 
$i_commentary52 =
  'Complexを返します。
今回はclassメソッドを呼んでいるので「Complex」と表示されます。'

$i_commentary53 =
  'imagメソッドは常に０を返します。
よって「0」と表示されます。'

$i_commentary54 =
  'between?メソッドは範囲内にあるかを判断するメソッドです。
今回は1と3の間に2があるかを判断しているので「true」と表示されます。'

$i_commentary55 =
  'between?メソッドは範囲内にあるかを判断するメソッドです。
今回は1と3の間に5があるかを判断しているので「false」と表示されます。'

$i_commentary56 =
  'timesメソッドはブロックを受け取って数値の回数だけブロック内の処理を繰り返します。
ここでは1行目でobjオブジェクトに1が代入されていてその後timesメソッドによってブロック内の処理が繰り返されています。
変数iには0から2が順番に+メソッドによって加算されるので「4」と表示されます。'

$i_commentary57 =
  'timesメソッドはブロックを受け取って数値の回数だけブロック内の処理を繰り返します。
ここでは1行目でobjオブジェクトに1が代入されていてその後timesメソッドによってブロック内の処理が繰り返されています。
変数iには0から2が順番に-メソッドによって減算されるので「-2」と表示されます。'

$i_commentary58 =
  'timesメソッドはブロックを受け取って数値の回数だけブロック内の処理を繰り返します。
ブロックの外で変数iは定義されていないにも関わらずブロックの外でiを参照している為、例外が発生します。'

$i_commentary59 =
  'timesメソッドはブロックを受け取って数値の回数だけブロック内の処理を繰り返します。
変数iには0から9まで順番に代入されますが0をかけている為出力結果は「0」と表示されます。'

$i_commentary60 =
  '浮動小数点数の計算はFloatクラスになります。
+メソッドは和を計算します。
よって今回は「200.0」と表示されます'

$i_commentary61 = 
  '<=>メソッドは左辺と右辺を比較するメソッドです。左辺の方が大きければ1、等しければ0、右辺の方が大きければ-1、比較出来なければnilと表示されます。
今回は左辺と右辺が等しい為、「0」と表示されます'

$i_commentary62 =
  'equal?メソッドは二つのオブジェクトが同一か調べる際に使用されます。
今回の変数obj1と引数で渡されているobj2オブジェクトは同一の為、「true」と表示されます。
またequal?メソッドはobject_idが一致するかどうか調べています。'

$i_commentary63 =
  '>=メソッドは数値として等しいまたは小さいか判定します。
左辺よりも右辺の方が小さい場合か等しい場合はtrueを返し、そうでなければfalseを返します。
今回は右辺の方が大きい為、falseを返します。'

$i_commentary64 =
  'divmodメソッドは引数の値で除算した結果とその余剰を配列で返します。
今回は結果は1でその余剰が0なので[1,0]と表示されます。'

$i_commentary65 =
  'chrメソッドはアスキーコードに対応する文字列を求めます。
今回は"A"と表示されます。'

$i_commentary66 =
  '+メソッドは和を計算します。
浮動小数点数の計算はFloatクラスになります。
よってここでは「165.0」と表示されます。'

$i_commentary67 =
  'NanはNot a numberの略です。
ここではNanと表示されますが、0/0の出力結果は例外ZeroDivisionErrorが発生します。'

$i_commentary68 =
  '浮動小数点数の計算はFloatクラスになります。
ここでは「Float」と表示されます。'

$i_commentary69 =
  'to_rメソッドは自身を有理数に変換した結果を返すメソッドです。
よってここでは「Rational」と表示されます。'

$i_commentary70 =
  '自身を浮動小数点数に変換します。
よってここでは「Float」と表示されます。
また範囲に収まらない場合はFloat::INFINITYを返します。'