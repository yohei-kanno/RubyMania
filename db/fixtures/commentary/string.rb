$s_commentary1 =
  '[]メソッドは指定された文字列を切り出すメソッドです。
今回は[1..4]と範囲指定されていますので該当する文字列の範囲を返します。
またs[1...4]となった場合は"e"は含みません。'

$s_commentary2 = 
  'upcaseメソッドは全ての小文字を対応する大文字に非破壊的に置き換えます。
sオブジェクトは破壊的に変更されていない為、"string"と表示されます。
またupcase!メソッドは全ての小文字を対応する大文字に破壊的に置き換えます'

$s_commentary3 = 
  'upcase!メソッドは全ての小文字を対応する大文字に破壊的に置き換えます。
よってsオブジェクトは破壊的に変更されている為、"STRING"と表示されます
またupcaseメソッドは全ての小文字を対応する大文字に非破壊的に置き換えます'

$s_commentary4 =
  '今回はsオブジェクトを非破壊的に変更したオブジェクトを変数aに代入しています。
よって"STRING"と表示されます。'

$s_commentary5 = 
  'downcase!メソッドは全ての大文字を対応する小文字に破壊的に置き換えます。
よって今回は"string"と表示されます。
またdowncaseメソッドは全ての大文字を対応する小文字に非破壊的に置き換えます。'

$s_commentary6 =
  'downcaseメソッドは全ての大文字を対応する小文字に非破壊的に置き換えます
sオブジェクトは破壊的に変更されていない為、"STRING"と表示されます。
またdowncase!メソッドは全ての大文字を対応する小文字に破壊的に置き換えます。'

$s_commentary7 =
  'concatメソッドを使用することで破壊的に文字列を連結することが出来ます。
今回は文字列"str"に文字列"ing"を破壊的に連結しています。
よって"string"と表示されます。
同様のメソッドに<<メソッドがあります。'

$s_commentary8 = 
  'concat!というメソッドは存在しない為、例外が発生します。'

$s_commentary9 =
  '<=>メソッドでは"aaa"と"bbb"をASCII コード順で比較しています
今回は"bbb"の方が大きいので「-1」と表示されます。'

$s_commentary10 =
  '<=>メソッドでは"bbb"と"aaa"をASCII コード順で比較しています
今回は"bbb"の方が大きいので「1」と表示されます。'

$s_commentary11 = 
  'equal?メソッドは二つのオブジェクトが同一か調べる際に使用されます。
今回の変数objと引数で渡されているStringオブジェクトは同一ではない為、「false」と表示されます。
またequal?メソッドはobject_idが一致するかどうか調べています。'

$s_commentary12 = 
  'equal?メソッドは二つのオブジェクトが同一か調べる際に使用されます。
今回は変数objオブジェクトをそのまま変数obj2オブジェクトに代入している為、「true」と表示されます。
またequal?メソッドはobject_idが一致するかどうか調べています。'

$s_commentary13 = 
  'eql?メソッドは文字列の内容が等しければ真を返します。
今回は内容が等しい為、「true」と表示されます。'

$s_commentary14 = 
  'eql?メソッドは文字列の内容が等しければ真を返します。
今回は"String.new"の内容が等しい為、「true」と表示されます。'

$s_commentary15 = 
  '[]メソッドは指定された文字列を切り出すメソッドです。
今回は[2..4]と範囲指定されていますので該当する文字列の範囲を返します。
よって今回は"345"と表示されます。
またs[2...4]となった場合は"5"は含みません。'

$s_commentary16 = 
  '[2....4]という表現は存在しません。
よって例外が発生します。'

$s_commentary17 = 
'[]メソッドは指定された文字列を切り出すメソッドです。
今回は[2...4]と範囲指定されていますので該当する文字列の範囲を返します。
よって今回は"34"と表示されます
またs[2..4]となった場合は"5"を含んで表示されます。'

$s_commentary18 = 
  '[]メソッドは指定された文字列を切り出すメソッドです。
今回は[6]と数値が指定されていますので数値の位置にある文字を返します。
しかしながら0から数えて6文字目は存在しない為、「nil」と表示されます。'

$s_commentary19 = 
  '[]メソッドは指定された文字列を切り出すメソッドです。
今回は[-1]と負の数値が指定されていますので末尾から数えた位置の文字を返します。
よって"g"と表示されます。'

$s_commentary20 = 
  '*メソッドは文字列の内容を繰り返して新しい文字列を返すメソッドです。
今回は引数に3が渡されていますので"stringstringstring"と表示されます。
また引数に負の数を渡すと例外が発生します。'

$s_commentary21 = 
  '[]=メソッドは該当する部分を新しい文字列で置換する事が出来ます。
str[1]とは文字列"t"を"str"で置換している為、"sstrring"と表示されます。'

$s_commentary22 = 
  'deleteメソッドは指定したパターンに含まれる文字を元の文字列から非破壊的に削除した文字列を生成して返します。
今回の問題では"2378"が指定されている為、"14569"と表示されます。'

$s_commentary23 = 
  'deleteメソッドは指定したパターンに含まれる文字を元の文字列から非破壊的に削除した文字列を生成して返します。
非破壊的メソッドの為、aオブジェクトは破壊的に変更されていない為、"123456789"と表示されます。'

$s_commentary24 = 
  'empty?メソッドは文字列が空の時,真を返します。
今回は""が指定されていますので「true」と表示されます。'

$s_commentary25 = 
  '==メソッドは文字列の内容が等しければ真を返します。
今回の問題ではどちらも["string"]が返りますので「true」と表示されます。
同様のメソッドにはeql?メソッドがあります。'

$s_commentary26 =
  '<<メソッドを使用することで破壊的に文字列を連結することが出来ます。
今回は文字列"a"に文字列"b"を破壊的に連結している為、"ab"と表示されます。
同様のメソッドにconcatメソッドがあります。'
  
$s_commentary27 = 
  '<メソッドでは"a"と"b"をASCII コード順で比較してtrueもしくはfalseを返します。
今回は"b"の方が大きいので「true」と表示されます。'

$s_commentary28 = 
  '>メソッドでは"a"と"b"をASCII コード順で比較してtrueもしくはfalseを返します。
今回は"b"の方が大きいので「false」と表示されます。'
  
$s_commentary29 =
  'insertメソッドは第一引数で挿入する位置を、第二引数では挿入する要素が入ります。
しかしながら今回は添字が範囲外である為例外が発生します。'

$s_commentary30 = 
  'insertメソッドは第一引数で挿入する位置を、第二引数では挿入する要素が入ります。
今回は3番目に"ingが挿入される為、"string"と表示されます。'

$s_commentary31 = 
  'internメソッドは文字列に対応するシンボル値を返します。
「"string".intern」では:stringを返しますが、to_sメソッドをつけることで再度文字列に変換しています。"string".intern.to_sでは"string"となる為、「true」と表示されます。'
  
  $s_commentary32 = 
  'internメソッドは文字列に対応するシンボル値を返します。
「"string".intern」では:stringを返しますが、to_sメソッドをつけることで再度文字列に変換しています。
またequal?メソッドは二つのオブジェクトが同一か調べる際に使用されます。
今回は同一とならない為、「false」と表示されます。'
    
$s_commentary33 = 
  'internメソッドは文字列に対応するシンボル値を返します。
「"string".intern」では:stringを返しますが、to_sメソッドをつけることで再度文字列に変換しています。
またeql?メソッドは文字列の内容が等しければ真を返します。
今回は内容が等しい為、「true」と表示されます。'

$s_commentary34 =
  'ljustメソッドは返す文字列の長さと割り付ける文字を指定する事が出来、左側に割り付けます。
今回はそのな長さに「5」が指定されています。また文字には「?」が指定されています。
文字列の長さは既に「5」以上あるのでそのまま"string"と表示されます。'

$s_commentary35 = 
  'rjustメソッドは返す文字列の長さと割り付ける文字を指定する事が出来、右側に割り付けます。
今回はそのな長さに「10」が指定されています。また文字には「?」が指定されています。
よって"????string"と表示されます'
  
$s_commentary36 =
  'lstripメソッドは文字列の先頭にある空白文字を全て破壊的に取り除きます。
今回は取り除く空白が存在しない為、「nil」と表示されます'
  
$s_commentary37 =
  'partitionメソッドは引数に渡された文字列もしくは正規表現が最初に登場する部分でオブジェクトを３つ([登場以前の文字列、引数に取った文字列、登場後の文字列])に分割して配列で返します。
ここでは"string"のオブジェクトに対して"s"を引数に取っていますので、["","s","tring"]と表示されます。'
  
$s_commentary38 =
  'replaceメソッドは文字列の一部分を破壊的に置換します
今回はstrオブジェクトの内容を"hello string"で置換して破壊的に置換しているので"hello string"と表示されます。
またreplaceメソッドはそれ自体が破壊的メソッドなのでreplace!メソッドは存在しません。'

$s_commentary39 = 
  'replace!メソッドは存在しない為、例外が発生します。'
  
$s_commentary40 =
  'squeezeメソッドは引数の中の文字列に同じ文字が並んでいたら非破壊的に１文字にまとめます。
"aabbcccccc"の文字列オブジェクトに対してsqueezeメソッドを呼んでいる為、"abc"と表示されます。'
  
$s_commentary41 = 
  'squeeze!メソッドは引数の中の文字列に同じ文字が並んでいたら破壊的に１文字にまとめます。
今回はまとめる文字列がありませんので「nil」と表示されます'

$s_commentary42 =
 'reverseメソッドは文字列を文字単位で非破壊的に左右逆転した文字列を返します。
reverseメソッドは非破壊的である為、objオブジェクトは破壊的に変更されていない為、"string"と表示されます'

$s_commentary43 =
  'reverseメソッドは文字列を文字単位で非破壊的に左右逆転した文字列を返します。
reverse!メソッドは文字列を文字単位で破壊的に左右逆転した文字列を返します。
今回はreverse!メソッドが呼ばれている為、破壊的にobjオブジェクトが変更されている為、"gnirts"と表示されます。'

$s_commentary44 = 
  'nextメソッドは次の文字列を返します。
しかし置き換えるわけではありませんのでobjオブジェクトは破壊的に変更されません。
よって"string"と表示されます'

$s_commentary45 = 
  'next!メソッドは次の文字列に置き換えます。
objオブジェクトは置き換えられていますので"string"と表示されます。'

$s_commentary46 = 
  'stripメソッドは文字列先頭と末尾の空白文字を全て取り除いた文字列を生成して返します。
objオブジェクトは破壊的に変更されていない為、"    string   "と表示されます。'

$s_commentary47 = 
  '先頭と末尾の空白文字を全て破壊的に取り除きます。
しかし今回は削除する空白がないので「nil」と表示されます。'

$s_commentary48 =
  '+メソッドは文字列を連結して新しい文字列を返します。
元のオブジェクトは破壊的に変更されることはありません。'

$s_commentary49 = 
  'Stringクラスのオブジェクトに対しての-メソッドは定義されていない為、例外が発生します。'
  
$s_commentary50 = 
  '[]メソッドは指定された文字列を切り出すメソッドです。
今回は開始位置と長さを指定する事で範囲指定しています。
1番目から2文字を"string"で置き換えている為、"hstringlo"と表示されます。'

$s_commentary51 = 
  '[]=メソッドは該当する部分を新しい文字列で置換する事が出来ます。
obj["string"] とは文字列"string"を"hello"で置換している為、"hello"と表示されます。'
  
$s_commentary52 = 
  '[]=メソッドは該当する部分を新しい文字列で置換する事が出来ます。
obj["s"] は文字列"s"を"hello"で置換している為、"hellotrings"と表示されます。'
  
$s_commentary53 = 
  'obj2は変更されていない為、"foo"と表示されます。
この状態でobj1を出力すると"foobar"と表示されます。
'

$s_commentary54 =
  '+メソッドは文字列を連結して新しい文字列を返します。
ここでは"hello"と"world"を文字列連結していますので"hello world"と表示されます。'

$s_commentary55 = 
  '==メソッドは文字列の内容が等しければ真を返します。
"hello"と"HELLO"では内容が等しくない為、「false」と表示されます。
同様のメソッドにはeql?メソッドがあります。'

$s_commentary56 = 
  '<メソッドでは"hello"と"HELLO"をASCII コード順で比較してtrueもしくはfalseを返します。
今回は"hello"の方が大きいので「false」と表示されます。'
  
$s_commentary57 = 
  '<<メソッドを使用することで破壊的に文字列を連結することが出来ます。
今回は文字列"hello"に文字列"HELLO"を破壊的に連結している為、"helloHello"と表示されます。
同様のメソッドにconcatメソッドがあります。'

$s_commentary58 = 
  'subメソッドは文字列中で最初にマッチした部分を置換するメソッドです。
今回は最初にマッチした"world"を"hello"に置換している為、"hello world"と表示されます。
破壊的メソッドとしてsub!もあります。'

$s_commentary59 = 
  'sliceメソッドは指定された文字列を切り出すメソッドです。
今回は数値が指定されていますが破壊的に変更されていませんのでobj1オブジェクトは変更されていません。
よって"string"と表示されます。
破壊的メソッドにslice!メソッドがあります。'

$s_commentary60 = 
  'slice!メソッドは指定された文字列を破壊的に切り出すメソッドです。
今回は数値が指定されいる為、数値の位置の文字列を取り除いた上での文字列を返す為、"strng"と表示されます。
取り除く文字列が無い場合はnilが返ります。'