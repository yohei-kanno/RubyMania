$a_commentary1 =
  '配列は要素は角カッコ[]で囲み、要素の間をカンマで区切って生成します。
配列はArrayクラスのインスタンスですので「Array」と表示されます。'

$a_commentary2 = 
  '生成した配列の初期値は第二引数で指定することが出来ます。
ここでは["ary", "ary", "ary"]と表示されます。
また上記のオブジェクトは全て同一となります。'
  
$a_commentary3 = 
  'この様に生成した配列の初期値は全てnilとなります。
  よってnil, nil, nil]と表示されます。
  配列の初期値は第二引数で指定する事がことが出来ます。'
  
$a_commentary4 = 
  '配列の第二引数にはブロックを渡すことが出来ます。
変数iには0,1,2と順番に代入されます。
*メソッドは積を求めるメソッドです。
ここでは[0, 2, 4]と表示されます。

またブロックを渡すことで生成された配列の要素は同一のオブジェクトではありません。'
  
$a_commentary5 = 
  'takeメソッドは配列の先頭から引数で渡さている数だけ要素を配列として返します。
よって今回は[1, 2]と表示されます。'
  
$a_commentary6 = 
  '引数に配列を渡すと配列を複製することが出来ます。
ここでは[2, 4, 6]と表示されます。'
  
$a_commentary7 = 
  '<<メソッドは指定されたオブジェクトを自身の末尾に破壊的に追加します。
よってここでは[1, 2 ,3, 0]と表示されます。'
  
$a_commentary8 = 
  'Arrayクラスのメソッドに>>メソッドは存在しません。
よってここでは例外が発生します。'
  
$a_commentary9 = 
  'concatメソッドは自身に引数に渡された配列を破壊的に連結します。
末尾に連結されますので[5, 6, 1, 2, 3]と表示されます。'
  
$a_commentary10 = 
  'concatメソッドは自身に引数に渡された配列を破壊的に連結します。
末尾に連結されますので[1, 2, 3 ,5, 6]と表示されます。'
  
$a_commentary11 = 
  'concat!メソッドは定義されていない為、例外が発生します。
concatメソッドは定義されていて自身に引数に渡された配列を破壊的に連結します。'
  
$a_commentary12 = 
  'insertメソッドは第一引数で指定された場所にそれ以降で指定したオブジェクトを挿入します。
ここでは第一引数に3、第二引数に4が指定されていますので[1, 2, 3, 4]と表示されます。'
  
$a_commentary13 = 
  'insertメソッドは第一引数で指定された場所にそれ以降で指定したオブジェクトを挿入します。
ここでは第一引数に4、第二引数に4が指定されています。この状態で3番目の要素に何も指定しない場合、3番目の要素にはnilが暗黙で挿入される為、[1, 2, 3, nil, 4]と表示されます。'
  
$a_commentary14 = 
  'insertメソッドは第一引数で指定された場所にそれ以降で指定したオブジェクトを挿入します。
compactメソッドは自身から非破壊的にnilを取り除いた配列を返します。
ここでは第一引数に4、第二引数に4が指定されています。この状態で3番目の要素に何も指定しない場合、3番目の要素にはnilが暗黙で挿入されています。
compactメソッドは非破壊的メソッドです。
obj1オブジェクトは変更されない為、[1, 2, 3, nil, 4]と表示されます。'
  
$a_commentary15 = 
  'insertメソッドは第一引数で指定された場所にそれ以降で指定したオブジェクトを挿入します。
compact!メソッドは自身から破壊的にnilを取り除いた配列を返します。
ここでは第一引数に4、第二引数に4が指定されています。この状態で3番目の要素に何も指定しない場合、3番目の要素にはnilが暗黙で挿入されています。
compactメソッドは破壊的メソッドです。
obj1オブジェクトは変更されている為、[1, 2, 3, 4]と表示されます。'
  
$a_commentary16 = 
  '==メソッドは自身の配列と引数で渡っている配列を順に比較して全要素が等しければtrueを返します。
ここでは全ての要素が等しい為、「true」と表示されます。'
  
$a_commentary17 = 
  '+メソッドは自身の配列と引数で渡っている配列の内容を繋げて返すメソッドです。
今回は[1, 2, 3, 3, 4, 5]と表示されます。
また元のオブジェクトが破壊的に変更されることはありません。'
  
$a_commentary18 = 
  'unshiftメソッドは指定されたオブジェクトを破壊的に配列の先頭に追加します。
よって[4, 1, 2, 3]と表示されます。'
  
$a_commentary19 = 
  'unshiftメソッドは指定されたオブジェクトを破壊的に配列の先頭に追加します。
よって[4, 4, 1, 2, 3]と表示されます。'
  
$a_commentary20 = 
  '[]メソッドは指定したインデックスにある要素を書き換えます。
ここでは配列の3番目に数値の7を指定していますので[1, 3, 5, 7]と表示されます。'
  
$a_commentary21 = 
  '[]メソッドは指定したインデックスにある要素を書き換えることが出来るメソッドです。
今回は範囲指定されています。配列の0番目から10番目を数値の7で置き換えていますので実行結果は[7]と表示されます。'
  
$a_commentary22 = 
  'fillメソッドは配列の全ての要素を指定したオブジェクトに変更します。
ここでは引数に文字列"a"を指定していますので["a", "a", "a"]と表示されます。'
  
$a_commentary23 = 
  'fill!メソッドは定義されていないので例外が発生します。
またfillメソッドは配列の全ての要素を指定したオブジェクトに変更するメソッドとして定義されています。'
  
$a_commentary24 = 
  'fillメソッドは配列の全ての要素を指定したオブジェクトに変更します。
引数を二つとる場合には始点、終点、または範囲で指定することが出来ます。
今回は第二引数にて始点で0を指定していますので、["a", "a", "a"]と表示されます。'
  
$a_commentary25 = 
  'replaceメソッドは引数で指定された配列で自分自身の内容を置き換えるメソッドです。
ここでは配列が指定されていますので[5, 6, 7]と表示されます。
またこのメソッドを使うことで置き換えたオブジェクトは同一であり、オブジェクトIDは変化しません。'
  
$a_commentary26 = 
  'atメソッドは指定されたインデックスの要素を返します。
よってここでは[2]と表示されます。
また指定したインデックスが範囲外であればnilを返します。'
  
$a_commentary27 = 
  'atメソッドは指定されたインデックスの要素を返します。
指定したインデックスが範囲外であればnilを返します。
よってここでは「nil」と表示されます。'
  
$a_commentary28 = 
  'fetchメソッドは指定されたインデックスの要素を返します。
引数がインデックスのみの場合、インデックスが要素数よりも大きければ例外が発生します。
第二引数があればその値を返します。
ここでは第一引数にてインデックスのみが渡されているので例外が発生します。'
  
$a_commentary29 = 
  'values_atメソッドは引数で指定されたインデックスに対応する要素を配列で返します。
ここでは引数で範囲指定されていますので[3, 4, 5, 6]と表示されます。
またインデックスに対応する値がなければ nil が要素になります。'
  
$a_commentary30 = 
  'firstメソッドは配列の要素の先頭を返します。引数が渡されている場合は先頭から指定した数だけ要素を返します。
今回は引数に2が渡されている為、[1, 2]と表示されます。'
  
$a_commentary31 = 
'firstメソッドは配列の要素の先頭を返します。引数が渡されている場合は先頭から指定した数だけ要素を返します。
今回は引数に10が渡されている為、[1, 2, 3, 4, 5, 6, 7]と表示されます。'
  
$a_commentary32 = 
  'lastメソッドは配列の要素の末尾を返します。引数が渡されている場合は末尾から指定した数だけ要素を返します。
今回は引数に5が渡されている為、[3, 4, 5, 6, 7]と表示されます。'
  
$a_commentary33 = 
  'assocメソッドは配列の配列を検索します。その0番目の要素が引数に渡っている要素と等しい最初の要素を返します。
該当する要素がなければnilを返します。
今回は0番目の要素に数値に2は存在しない為、「nil」と表示されます'
  
$a_commentary34 = 
  'assocメソッドは配列の配列を検索します。その0番目の要素が引数に渡っている要素と等しい最初の要素を返します。
今回は引数に3が渡されている為、[3, 4]と表示されます。
該当する要素がなければnilを返します。'
  
$a_commentary35 = 
  'rssocメソッドは配列の配列を検索します。その1番目の要素が引数に渡っている要素と等しい最初の要素を返します。
  該当する要素がなければnilを返します。
  今回は1番目の要素に数値に3は存在しない為、「nil」と表示されます'
  
$a_commentary36 = 
  'rssocメソッドは配列の配列を検索します。その1番目の要素が引数に渡っている要素と等しい最初の要素を返します。
今回は引数に2が渡されている為、[1, 2]と表示されます。
該当する要素がなければnilを返します。'
  
$a_commentary37 = 
  'delete_atメソッドは指定された位置にある要素を取り除いてそれを返します。
よってここでは[1, 2, 3, 5, 6, 7]と表示されます。
また指定した位置が範囲外の場合はnilが返ります。'
  
$a_commentary38 = 
  'delete_atメソッドは指定された位置にある要素を取り除いてそれを返します。
delete_atメソッドの引数に範囲指定は出来ない為、例外が発生します。'
  
$a_commentary39 = 
  'clearメソッドは配列の要素を全て削除して空にします。
よって[]と表示されます。'
  
$a_commentary40 = 
  'delete_ifメソッドは要素を順番にブロックに渡して評価して、その結果が真になった要素を全て削除します。
even?メソッドは自身が偶数であれば真を返します。そうでなければ偽を返すメソッドです。
よってここではobjオブジェクトの偶数が全て削除された配列が返りますので[1, 3, 5, 7]と表示されます。
'
  
$a_commentary41 = 
'delete_ifメソッドは要素を順番にブロックに渡して評価して、その結果が真になった要素を全て削除します。
odd?メソッドは自身が奇数であれば真を返します。そうでなければ偽を返すメソッドです。
よってここではobjオブジェクトの奇数が全て削除された配列が返りますので[2, 4, 6]と表示されます。'
  
$a_commentary42 = 
  'sliceメソッドは指定された自身の要素を返します。
objオブジェクトは破壊的に変更されているわけではないので変更されません。
よって[1, 2, 3, 4, 5, 6, 7]と表示されます。'
  
$a_commentary43 = 
  'slice!メソッドは要素を自身から取り除いて、取り除いた要素を返します。
今回は範囲指定されています。
slice!メソッドは破壊的メソッドですのでobjオブジェクトは破壊的に変更されています。
よって[1, 2, 7]と表示されます。'
  
$a_commentary44 = 
  'shiftメソッドは配列の先頭を取り除いてそれを返すメソッドです。
objオブジェクトは破壊的に変更されていますので[2, 3, 4, 5, 6, 7]と表示されます。'
  
$a_commentary45 = 
  'shfit!メソッドは定義されていない為、例外が発生します。
shiftメソッドは定義されていて配列の先頭を取り除いてそれを返すメソッドです。'
  
$a_commentary46 = 
  'popメソッドは自身の末尾から要素を取り除いてそれを返すメソッドです。
引数を与えた場合はその個数だけ取り除いてそれを配列で返します。
今回は引数に3が与えられていますので[1, 2, 3, 4]と表示されます。'
  
$a_commentary47 = 
  '|メソッドは両方の配列に含まれる要素を全て含む新しい配列を生成するメソッドです。
またこの際重複する要素は取り除かれます。
よって今回は[1, 2, 3, 4, 5]と表示されます。'
  
$a_commentary48 = 
  '+メソッドは配列の内容を繋げた配列を生成して返すメソッドです。
よって[1, 2, 3, 3, 4, 5]と表示されます。
元の配列は破壊的に変更されるわけではありません。'
  
$a_commentary49 = 
  '-メソッドは自身から指定した要素を取り除いた配列を生成して返します。
よって[1, 2]と表示されます。
要素の同一性はeql?メソッドによって判断されます。'
  
$a_commentary50 = 
  '&メソッドは両方の配列に含まれる要素からなる新しい配列を返します。その際、重複する要素は取り除かれます。
よってここでは[3]と表示されます。'
  
$a_commentary51 = 
  '変数nには配列は順番に代入されます。
*メソッドは積を計算します。
よってここでは
「2
4
6」
と表示されます。'
  
$a_commentary52 = 
'reverse_eachメソッドは各要素に対して逆順にブロックを評価します。
*メソッドは積を計算します。
よって
「6
4
2」
と表示されます。
'
  
$a_commentary53 = 
  'each_indexメソッドは各要素のインデックスに対してブロックを評価します。
ここで変数nには0,1,2が順番に代入されます。
よってここでは
「0
2
4」
と表示されます。'
  
$a_commentary54 = 
  '|メソッドは両方の配列に含まれる要素を全て含む新しい配列を生成するメソッドです。
ここで言う新しい配列は[1,2,3,4,5]です。
それをlengthメソッドで要素の長さを返しているので「5」と表示される'
  
$a_commentary55 = 
  'clearメソッドは配列の要素を全て削除して空にします。
empty?メソッドは要素の数が0の時に真を返します。
今回はclearメソッドによって配列の要素が空になっているので「true」と表示されます。'
  
$a_commentary56 = 
  'joinメソッドは配列の要素を連結して文字列を生成するメソッドです。区切り文字を引数で指定することも出来ます。
今回は引数に(,)が指定されていますので"1,2,3,4,5"と表示されます。'
  
$a_commentary57 = 
  'sort!メソッドは配列の内容を破壊的にソートした配列を返します。要素同士の比較には<=>メソッドを使用しています。
よって今回は[1, 2, 3, 4, 5]と表示されます。'
  
$a_commentary58 = 
  'sort!メソッドは配列の内容を破壊的にソートした配列を返します。要素同士の比較には<=>メソッドを使用しています。
[5, 4, 3, 2, 1]と表示される'
  
$a_commentary59 = 
  'uniqメソッドあ重複した要素を取り除いた配列を返すメソッドです。
+メソッドは自身の配列と引数で渡っている配列の内容を繋げて返すメソッドです。 
よって今回は[1, 2, 3, 4, 5]と表示されます。'
  
$a_commentary60 = 
  'flattenメソッドは配列を平滑化した配列を返します。引数がある場合はその深さを指定することも出来ます。
reverseメソッドは自身の要素を並べた新しい配列を生成して返します。
よって今回は[8, 7, 6, 5, 4, 3, 2, 1]と表示されます'
  
$a_commentary61 = 
  'flattenメソッドは配列を平滑化した配列を返します。引数がある場合はその深さを指定することも出来ます。今回は引数に0が与えられている為、このメソッドは実質オブジェクトに対して何も影響を及ぼしません。
よって[[1, 2], [3, 4], [5, 6], [7, 8]]と表示されます。'
  
$a_commentary62 = 
  'zipメソッドは自身と引数に与えられた要素からなる配列の配列を生成して返します。よって[[1, 3], [2, 4], [3, 5]]と表示されます。'
  
$a_commentary63 = 
  '自身の配列と引数で与えられた配列のそれぞれから要素を１個ずつとって配列を生成します。それらの配列を要素とする配列を返すメソッドです。
よって[[1, 3], [1, 4], [2, 3], [2, 4]]と表示されます。'
  
$a_commentary64 = 
  'dupメソッドはレシーバと同じ内容を持つ新しい配列を生成して内容だけをコピーするメソッドです。
equal?メソッドは同一かどうかを調べるメソッドです。
dupメソッドで生成されたオブジェクトは内容は同じですが同一ではない為、「false」と表示されます。'
  
$a_commentary65 = 
  'countメソッドは要素の数をカウントするメソッドです。
今回はcountメソッドにブロックが渡されています。do〜endで囲む場合は結合度が弱いためpメソッドの引数としてonj.countが先に評価されブロック内の処理は無視されています。
よって今回は「7」と表示されます。'
  
$a_commentary66 = 
  'countメソッドは要素の数をカウントするメソッドです。
今回はcountメソッドにブロックが渡されています。{}で囲む場合は結合度が強いためpメソッドの引数としてobj.count{ |i| i.even? }評価されます。
evenメソッドは自身が偶数であれば真を返すメソッドです。
よって今回は「3」と表示されます。'
  
$a_commentary67 = 
  'dropメソッドは引数で渡っている数値の数だけ配列の先頭の要素を捨てて残りの要素の配列として返します。
ここでは引数に4が渡っていますので[5, 6, 7]と表示されます。'
  
$a_commentary68 = 
  'selectメソッドは各要素に対してブロックを評価した値が真であった要素を配列にして返します。
evenメソッドは自身が偶数であれば真を返すメソッドです。
よって今回は[2, 4, 6]と表示されます。'
  
$a_commentary69 = 
  'maxメソッドは最大の要素を返します。
また全要素がお互いに<=>メソッドで比較できることを仮定します。
よって"c"と表示されます。
'